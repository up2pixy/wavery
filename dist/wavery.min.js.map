{"version":3,"sources":["webpack://Wavery/webpack/bootstrap","webpack://Wavery/./node_modules/chroma-js/chroma.js","webpack://Wavery/(webpack)/buildin/module.js","webpack://Wavery/./lib/bezier-spline.js","webpack://Wavery/./lib/wavery.js"],"names":["installedModules","__webpack_require__","moduleId","exports","module","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","enumerable","get","r","Symbol","toStringTag","value","t","mode","__esModule","ns","create","key","bind","n","object","property","prototype","hasOwnProperty","p","s","__WEBPACK_AMD_DEFINE_RESULT__","Color","PITHIRD","TWOPI","X","Z","bezier","chroma","clip_rgb","cos","css2rgb","hex2rgb","hsi2rgb","hsl2rgb","hsv2rgb","lab2lch","lab2rgb","lab_xyz","lch2lab","lch2rgb","limit","luminance","luminance_x","rgb2hex","rgb2hsi","rgb2hsl","rgb2hsv","rgb2lab","rgb2lch","rgb_xyz","type","unpack","xyz_lab","xyz_rgb","x","y","z","undefined","apply","color","hsl","h","a","hsv","v","rgb","g","b","hex","css","lab","lch","hsi","gl","mix","interpolate","f","contrast","l1","l2","_Color","arg","args","me","_i","_len","_ref","_ref1","_ref2","_ref3","_ref4","this","arguments","length","push","_rgb","slice","rgba","toString","lum","cur_lum","eps","max_iter","test","lm","Math","abs","k","colors","alpha","rnd","map","round","join","col","hue","hue0","hue1","lbv","lbv0","lbv1","res","sat","sat0","sat1","xyz0","xyz1","substr","isNaN","Number","NaN","premultiply","darken","amount","darker","brighten","brighter","saturate","desaturate","_j","_k","_l","toLowerCase","match","u","split","parseInt","t1","t2","t3","q","_ref5","_ref6","floor","sqrt","atan2","PI","pow","sin","L","str","min","acos","max","delta","scale","positions","getClass","getColor","resetCache","setColors","setDomain","tmap","_colorCache","_colors","_correctLightness","_domain","_max","_min","_mode","_nacol","_numClasses","_out","_pos","_spread","brewer","domain","maxc","minc","val","bypassMap","classes","analyze","limits","_m","range","out","_o","spread","correctLightness","L0","L1","L_actual","L_diff","L_ideal","pol","t0","samples","scales","cool","hot","data","filter","add","visit","MAX_VALUE","sum","values","count","num","assignments","best","centroids","cluster","clusterSizes","dist","j","kClusters","max_log","min_log","mindist","nb_iters","newCentroids","pb","pr","repeat","tmpKMeansBreaks","_n","_p","_q","_r","_ref10","_ref11","_ref12","_ref13","_ref14","_ref15","_ref7","_ref8","_ref9","_s","_t","_u","_v","_w","sort","LOG10E","log","Array","OrRd","PuBu","BuPu","Oranges","BuGn","YlOrBr","YlGn","Reds","RdPu","Greens","YlGnBu","Purples","GnBu","Greys","YlOrRd","PuRd","Blues","PuBuGn","Spectral","RdYlGn","RdBu","PiYG","PRGn","RdYlBu","BrBG","RdGy","PuOr","Set2","Accent","Set1","Set3","Dark2","Paired","Pastel2","Pastel1","indigo","gold","hotpink","firebrick","indianred","yellow","mistyrose","darkolivegreen","olive","darkseagreen","pink","tomato","lightcoral","orangered","navajowhite","lime","palegreen","darkslategrey","greenyellow","burlywood","seashell","mediumspringgreen","fuchsia","papayawhip","blanchedalmond","chartreuse","dimgray","black","peachpuff","springgreen","aquamarine","white","orange","lightsalmon","darkslategray","brown","ivory","dodgerblue","peru","lawngreen","chocolate","crimson","forestgreen","darkgrey","lightseagreen","cyan","mintcream","silver","antiquewhite","mediumorchid","skyblue","gray","darkturquoise","goldenrod","darkgreen","floralwhite","darkviolet","darkgray","moccasin","saddlebrown","grey","darkslateblue","lightskyblue","lightpink","mediumvioletred","slategrey","red","deeppink","limegreen","darkmagenta","palegoldenrod","plum","turquoise","lightgrey","lightgoldenrodyellow","darkgoldenrod","lavender","maroon","yellowgreen","sandybrown","thistle","violet","navy","magenta","dimgrey","tan","rosybrown","olivedrab","blue","lightblue","ghostwhite","honeydew","cornflowerblue","slateblue","linen","darkblue","powderblue","seagreen","darkkhaki","snow","sienna","mediumblue","royalblue","lightcyan","green","mediumpurple","midnightblue","cornsilk","paleturquoise","bisque","slategray","darkcyan","khaki","wheat","teal","darkorchid","deepskyblue","salmon","darkred","steelblue","palevioletred","lightslategray","aliceblue","lightslategrey","lightgreen","orchid","gainsboro","mediumseagreen","lightgray","mediumturquoise","lemonchiffon","cadetblue","lightyellow","lavenderblush","coral","purple","aqua","whitesmoke","mediumslateblue","darkorange","mediumaquamarine","darksalmon","beige","blueviolet","azure","lightsteelblue","oldlace","classToType","obj","strType","I","I0","I1","lab0","lab1","lab2","lab3","_results","webpackPolyfill","deprecate","paths","children","computeControlPoints","K","p1","p2","generate_closed_path","curvePoints","leftCornerPoint","rightCornerPoint","xPoints","yPoints","xControlPoints","yControlPoints","path","concat","svgPath","document","createElementNS","setAttributeNS","Wavery","width","height","segmentCount","layerCount","variance","_classCallCheck","points","cell_width","cell_height","moveLimit_x","moveLimit_y","varietalY","random","varietalX","generatePoints","svg","setAttribute","pointsPerLayer","appendChild"],"mappings":"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","file":"wavery.min.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 2);\n","// Generated by CoffeeScript 1.6.2\n/** echo  * @license echo  * while read i do echo  *  done echo\n*/\n\n\n(function() {\n  var Color, K, PITHIRD, TWOPI, X, Y, Z, bezier, brewer, chroma, clip_rgb, colors, cos, css2rgb, hex2rgb, hsi2rgb, hsl2rgb, hsv2rgb, lab2lch, lab2rgb, lab_xyz, lch2lab, lch2rgb, limit, luminance, luminance_x, rgb2hex, rgb2hsi, rgb2hsl, rgb2hsv, rgb2lab, rgb2lch, rgb_xyz, root, type, unpack, xyz_lab, xyz_rgb, _ref;\n\n  chroma = function(x, y, z, m) {\n    return new Color(x, y, z, m);\n  };\n\n  if ((typeof module !== \"undefined\" && module !== null) && (module.exports != null)) {\n    module.exports = chroma;\n  }\n\n  if (typeof define === 'function' && define.amd) {\n    define([], function() {\n      return chroma;\n    });\n  } else {\n    root = typeof exports !== \"undefined\" && exports !== null ? exports : this;\n    root.chroma = chroma;\n  }\n\n  chroma.color = function(x, y, z, m) {\n    return new Color(x, y, z, m);\n  };\n\n  chroma.hsl = function(h, s, l, a) {\n    return new Color(h, s, l, a, 'hsl');\n  };\n\n  chroma.hsv = function(h, s, v, a) {\n    return new Color(h, s, v, a, 'hsv');\n  };\n\n  chroma.rgb = function(r, g, b, a) {\n    return new Color(r, g, b, a, 'rgb');\n  };\n\n  chroma.hex = function(x) {\n    return new Color(x);\n  };\n\n  chroma.css = function(x) {\n    return new Color(x);\n  };\n\n  chroma.lab = function(l, a, b) {\n    return new Color(l, a, b, 'lab');\n  };\n\n  chroma.lch = function(l, c, h) {\n    return new Color(l, c, h, 'lch');\n  };\n\n  chroma.hsi = function(h, s, i) {\n    return new Color(h, s, i, 'hsi');\n  };\n\n  chroma.gl = function(r, g, b, a) {\n    return new Color(r * 255, g * 255, b * 255, a, 'gl');\n  };\n\n  chroma.interpolate = function(a, b, f, m) {\n    if ((a == null) || (b == null)) {\n      return '#000';\n    }\n    if (type(a) === 'string') {\n      a = new Color(a);\n    }\n    if (type(b) === 'string') {\n      b = new Color(b);\n    }\n    return a.interpolate(f, b, m);\n  };\n\n  chroma.mix = chroma.interpolate;\n\n  chroma.contrast = function(a, b) {\n    var l1, l2;\n\n    if (type(a) === 'string') {\n      a = new Color(a);\n    }\n    if (type(b) === 'string') {\n      b = new Color(b);\n    }\n    l1 = a.luminance();\n    l2 = b.luminance();\n    if (l1 > l2) {\n      return (l1 + 0.05) / (l2 + 0.05);\n    } else {\n      return (l2 + 0.05) / (l1 + 0.05);\n    }\n  };\n\n  chroma.luminance = function(color) {\n    return chroma(color).luminance();\n  };\n\n  chroma._Color = Color;\n\n  /**\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  Color = (function() {\n    function Color() {\n      var a, arg, args, m, me, me_rgb, x, y, z, _i, _len, _ref, _ref1, _ref2, _ref3, _ref4;\n\n      me = this;\n      args = [];\n      for (_i = 0, _len = arguments.length; _i < _len; _i++) {\n        arg = arguments[_i];\n        if (arg != null) {\n          args.push(arg);\n        }\n      }\n      if (args.length === 0) {\n        _ref = [255, 0, 255, 1, 'rgb'], x = _ref[0], y = _ref[1], z = _ref[2], a = _ref[3], m = _ref[4];\n      } else if (type(args[0]) === \"array\") {\n        if (args[0].length === 3) {\n          _ref1 = args[0], x = _ref1[0], y = _ref1[1], z = _ref1[2];\n          a = 1;\n        } else if (args[0].length === 4) {\n          _ref2 = args[0], x = _ref2[0], y = _ref2[1], z = _ref2[2], a = _ref2[3];\n        } else {\n          throw 'unknown input argument';\n        }\n        m = (_ref3 = args[1]) != null ? _ref3 : 'rgb';\n      } else if (type(args[0]) === \"string\") {\n        x = args[0];\n        m = 'hex';\n      } else if (type(args[0]) === \"object\") {\n        _ref4 = args[0]._rgb, x = _ref4[0], y = _ref4[1], z = _ref4[2], a = _ref4[3];\n        m = 'rgb';\n      } else if (args.length >= 3) {\n        x = args[0];\n        y = args[1];\n        z = args[2];\n      }\n      if (args.length === 3) {\n        m = 'rgb';\n        a = 1;\n      } else if (args.length === 4) {\n        if (type(args[3]) === \"string\") {\n          m = args[3];\n          a = 1;\n        } else if (type(args[3]) === \"number\") {\n          m = 'rgb';\n          a = args[3];\n        }\n      } else if (args.length === 5) {\n        a = args[3];\n        m = args[4];\n      }\n      if (a == null) {\n        a = 1;\n      }\n      if (m === 'rgb') {\n        me._rgb = [x, y, z, a];\n      } else if (m === 'gl') {\n        me._rgb = [x * 255, y * 255, z * 255, a];\n      } else if (m === 'hsl') {\n        me._rgb = hsl2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hsv') {\n        me._rgb = hsv2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hex') {\n        me._rgb = hex2rgb(x);\n      } else if (m === 'lab') {\n        me._rgb = lab2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'lch') {\n        me._rgb = lch2rgb(x, y, z);\n        me._rgb[3] = a;\n      } else if (m === 'hsi') {\n        me._rgb = hsi2rgb(x, y, z);\n        me._rgb[3] = a;\n      }\n      me_rgb = clip_rgb(me._rgb);\n    }\n\n    Color.prototype.rgb = function() {\n      return this._rgb.slice(0, 3);\n    };\n\n    Color.prototype.rgba = function() {\n      return this._rgb;\n    };\n\n    Color.prototype.hex = function() {\n      return rgb2hex(this._rgb);\n    };\n\n    Color.prototype.toString = function() {\n      return this.name();\n    };\n\n    Color.prototype.hsl = function() {\n      return rgb2hsl(this._rgb);\n    };\n\n    Color.prototype.hsv = function() {\n      return rgb2hsv(this._rgb);\n    };\n\n    Color.prototype.lab = function() {\n      return rgb2lab(this._rgb);\n    };\n\n    Color.prototype.lch = function() {\n      return rgb2lch(this._rgb);\n    };\n\n    Color.prototype.hsi = function() {\n      return rgb2hsi(this._rgb);\n    };\n\n    Color.prototype.gl = function() {\n      return [this._rgb[0] / 255, this._rgb[1] / 255, this._rgb[2] / 255, this._rgb[3]];\n    };\n\n    Color.prototype.luminance = function(lum, mode) {\n      var cur_lum, eps, max_iter, test;\n\n      if (mode == null) {\n        mode = 'rgb';\n      }\n      if (!arguments.length) {\n        return luminance(this._rgb);\n      }\n      if (lum === 0) {\n        this._rgb = [0, 0, 0, this._rgb[3]];\n      }\n      if (lum === 1) {\n        this._rgb = [255, 255, 255, this._rgb[3]];\n      }\n      cur_lum = luminance(this._rgb);\n      eps = 1e-7;\n      max_iter = 20;\n      test = function(l, h) {\n        var lm, m;\n\n        m = l.interpolate(0.5, h, mode);\n        lm = m.luminance();\n        if (Math.abs(lum - lm) < eps || !max_iter--) {\n          return m;\n        }\n        if (lm > lum) {\n          return test(l, m);\n        }\n        return test(m, h);\n      };\n      this._rgb = (cur_lum > lum ? test(new Color('black'), this) : test(this, new Color('white'))).rgba();\n      return this;\n    };\n\n    Color.prototype.name = function() {\n      var h, k;\n\n      h = this.hex();\n      for (k in chroma.colors) {\n        if (h === chroma.colors[k]) {\n          return k;\n        }\n      }\n      return h;\n    };\n\n    Color.prototype.alpha = function(alpha) {\n      if (arguments.length) {\n        this._rgb[3] = alpha;\n        return this;\n      }\n      return this._rgb[3];\n    };\n\n    Color.prototype.css = function(mode) {\n      var hsl, me, rgb, rnd;\n\n      if (mode == null) {\n        mode = 'rgb';\n      }\n      me = this;\n      rgb = me._rgb;\n      if (mode.length === 3 && rgb[3] < 1) {\n        mode += 'a';\n      }\n      if (mode === 'rgb') {\n        return mode + '(' + rgb.slice(0, 3).map(Math.round).join(',') + ')';\n      } else if (mode === 'rgba') {\n        return mode + '(' + rgb.slice(0, 3).map(Math.round).join(',') + ',' + rgb[3] + ')';\n      } else if (mode === 'hsl' || mode === 'hsla') {\n        hsl = me.hsl();\n        rnd = function(a) {\n          return Math.round(a * 100) / 100;\n        };\n        hsl[0] = rnd(hsl[0]);\n        hsl[1] = rnd(hsl[1] * 100) + '%';\n        hsl[2] = rnd(hsl[2] * 100) + '%';\n        if (mode.length === 4) {\n          hsl[3] = rgb[3];\n        }\n        return mode + '(' + hsl.join(',') + ')';\n      }\n    };\n\n    Color.prototype.interpolate = function(f, col, m) {\n      /*\n      interpolates between colors\n      f = 0 --> me\n      f = 1 --> col\n      */\n\n      var dh, hue, hue0, hue1, lbv, lbv0, lbv1, me, res, sat, sat0, sat1, xyz0, xyz1;\n\n      me = this;\n      if (m == null) {\n        m = 'rgb';\n      }\n      if (type(col) === \"string\") {\n        col = new Color(col);\n      }\n      if (m === 'hsl' || m === 'hsv' || m === 'lch' || m === 'hsi') {\n        if (m === 'hsl') {\n          xyz0 = me.hsl();\n          xyz1 = col.hsl();\n        } else if (m === 'hsv') {\n          xyz0 = me.hsv();\n          xyz1 = col.hsv();\n        } else if (m === 'hsi') {\n          xyz0 = me.hsi();\n          xyz1 = col.hsi();\n        } else if (m === 'lch') {\n          xyz0 = me.lch();\n          xyz1 = col.lch();\n        }\n        if (m.substr(0, 1) === 'h') {\n          hue0 = xyz0[0], sat0 = xyz0[1], lbv0 = xyz0[2];\n          hue1 = xyz1[0], sat1 = xyz1[1], lbv1 = xyz1[2];\n        } else {\n          lbv0 = xyz0[0], sat0 = xyz0[1], hue0 = xyz0[2];\n          lbv1 = xyz1[0], sat1 = xyz1[1], hue1 = xyz1[2];\n        }\n        if (!isNaN(hue0) && !isNaN(hue1)) {\n          if (hue1 > hue0 && hue1 - hue0 > 180) {\n            dh = hue1 - (hue0 + 360);\n          } else if (hue1 < hue0 && hue0 - hue1 > 180) {\n            dh = hue1 + 360 - hue0;\n          } else {\n            dh = hue1 - hue0;\n          }\n          hue = hue0 + f * dh;\n        } else if (!isNaN(hue0)) {\n          hue = hue0;\n          if ((lbv1 === 1 || lbv1 === 0) && m !== 'hsv') {\n            sat = sat0;\n          }\n        } else if (!isNaN(hue1)) {\n          hue = hue1;\n          if ((lbv0 === 1 || lbv0 === 0) && m !== 'hsv') {\n            sat = sat1;\n          }\n        } else {\n          hue = Number.NaN;\n        }\n        if (sat == null) {\n          sat = sat0 + f * (sat1 - sat0);\n        }\n        lbv = lbv0 + f * (lbv1 - lbv0);\n        if (m.substr(0, 1) === 'h') {\n          res = new Color(hue, sat, lbv, m);\n        } else {\n          res = new Color(lbv, sat, hue, m);\n        }\n      } else if (m === 'rgb') {\n        xyz0 = me._rgb;\n        xyz1 = col._rgb;\n        res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n      } else if (m === 'lab') {\n        xyz0 = me.lab();\n        xyz1 = col.lab();\n        res = new Color(xyz0[0] + f * (xyz1[0] - xyz0[0]), xyz0[1] + f * (xyz1[1] - xyz0[1]), xyz0[2] + f * (xyz1[2] - xyz0[2]), m);\n      } else {\n        throw \"color mode \" + m + \" is not supported\";\n      }\n      res.alpha(me.alpha() + f * (col.alpha() - me.alpha()));\n      return res;\n    };\n\n    Color.prototype.premultiply = function() {\n      var a, rgb;\n\n      rgb = this.rgb();\n      a = this.alpha();\n      return chroma(rgb[0] * a, rgb[1] * a, rgb[2] * a, a);\n    };\n\n    Color.prototype.darken = function(amount) {\n      var lch, me;\n\n      if (amount == null) {\n        amount = 20;\n      }\n      me = this;\n      lch = me.lch();\n      lch[0] -= amount;\n      return chroma.lch(lch).alpha(me.alpha());\n    };\n\n    Color.prototype.darker = function(amount) {\n      return this.darken(amount);\n    };\n\n    Color.prototype.brighten = function(amount) {\n      if (amount == null) {\n        amount = 20;\n      }\n      return this.darken(-amount);\n    };\n\n    Color.prototype.brighter = function(amount) {\n      return this.brighten(amount);\n    };\n\n    Color.prototype.saturate = function(amount) {\n      var lch, me;\n\n      if (amount == null) {\n        amount = 20;\n      }\n      me = this;\n      lch = me.lch();\n      lch[1] += amount;\n      return chroma.lch(lch).alpha(me.alpha());\n    };\n\n    Color.prototype.desaturate = function(amount) {\n      if (amount == null) {\n        amount = 20;\n      }\n      return this.saturate(-amount);\n    };\n\n    return Color;\n\n  })();\n\n  clip_rgb = function(rgb) {\n    var i;\n\n    for (i in rgb) {\n      if (i < 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 255) {\n          rgb[i] = 255;\n        }\n      } else if (i === 3) {\n        if (rgb[i] < 0) {\n          rgb[i] = 0;\n        }\n        if (rgb[i] > 1) {\n          rgb[i] = 1;\n        }\n      }\n    }\n    return rgb;\n  };\n\n  css2rgb = function(css) {\n    var hsl, i, m, rgb, _i, _j, _k, _l;\n\n    css = css.toLowerCase();\n    if ((chroma.colors != null) && chroma.colors[css]) {\n      return hex2rgb(chroma.colors[css]);\n    }\n    if (m = css.match(/rgb\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = _i = 0; _i <= 2; i = ++_i) {\n        rgb[i] = +rgb[i];\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+),\\s*(\\-?\\d+)\\s*,\\s*(\\-?\\d+)\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = _j = 0; _j <= 3; i = ++_j) {\n        rgb[i] = +rgb[i];\n      }\n    } else if (m = css.match(/rgb\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      rgb = m.slice(1, 4);\n      for (i = _k = 0; _k <= 2; i = ++_k) {\n        rgb[i] = Math.round(rgb[i] * 2.55);\n      }\n      rgb[3] = 1;\n    } else if (m = css.match(/rgba\\(\\s*(\\-?\\d+(?:\\.\\d+)?)%,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      rgb = m.slice(1, 5);\n      for (i = _l = 0; _l <= 2; i = ++_l) {\n        rgb[i] = Math.round(rgb[i] * 2.55);\n      }\n      rgb[3] = +rgb[3];\n    } else if (m = css.match(/hsl\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = 1;\n    } else if (m = css.match(/hsla\\(\\s*(\\-?\\d+(?:\\.\\d+)?),\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*(\\-?\\d+(?:\\.\\d+)?)%\\s*,\\s*([01]|[01]?\\.\\d+)\\)/)) {\n      hsl = m.slice(1, 4);\n      hsl[1] *= 0.01;\n      hsl[2] *= 0.01;\n      rgb = hsl2rgb(hsl);\n      rgb[3] = +m[4];\n    }\n    return rgb;\n  };\n\n  hex2rgb = function(hex) {\n    var a, b, g, r, rgb, u;\n\n    if (hex.match(/^#?([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$/)) {\n      if (hex.length === 4 || hex.length === 7) {\n        hex = hex.substr(1);\n      }\n      if (hex.length === 3) {\n        hex = hex.split(\"\");\n        hex = hex[0] + hex[0] + hex[1] + hex[1] + hex[2] + hex[2];\n      }\n      u = parseInt(hex, 16);\n      r = u >> 16;\n      g = u >> 8 & 0xFF;\n      b = u & 0xFF;\n      return [r, g, b, 1];\n    }\n    if (hex.match(/^#?([A-Fa-f0-9]{8})$/)) {\n      if (hex.length === 9) {\n        hex = hex.substr(1);\n      }\n      u = parseInt(hex, 16);\n      r = u >> 24 & 0xFF;\n      g = u >> 16 & 0xFF;\n      b = u >> 8 & 0xFF;\n      a = u & 0xFF;\n      return [r, g, b, a];\n    }\n    if (rgb = css2rgb(hex)) {\n      return rgb;\n    }\n    throw \"unknown color: \" + hex;\n  };\n\n  hsi2rgb = function(h, s, i) {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/hsi2rgb.cpp\n    */\n\n    var b, g, r, _ref;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], i = _ref[2];\n    h /= 360;\n    if (h < 1 / 3) {\n      b = (1 - s) / 3;\n      r = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      g = 1 - (b + r);\n    } else if (h < 2 / 3) {\n      h -= 1 / 3;\n      r = (1 - s) / 3;\n      g = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      b = 1 - (r + g);\n    } else {\n      h -= 2 / 3;\n      g = (1 - s) / 3;\n      b = (1 + s * cos(TWOPI * h) / cos(PITHIRD - TWOPI * h)) / 3;\n      r = 1 - (g + b);\n    }\n    r = limit(i * r * 3);\n    g = limit(i * g * 3);\n    b = limit(i * b * 3);\n    return [r * 255, g * 255, b * 255];\n  };\n\n  hsl2rgb = function() {\n    var b, c, g, h, i, l, r, s, t1, t2, t3, _i, _ref, _ref1;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], l = _ref[2];\n    if (s === 0) {\n      r = g = b = l * 255;\n    } else {\n      t3 = [0, 0, 0];\n      c = [0, 0, 0];\n      t2 = l < 0.5 ? l * (1 + s) : l + s - l * s;\n      t1 = 2 * l - t2;\n      h /= 360;\n      t3[0] = h + 1 / 3;\n      t3[1] = h;\n      t3[2] = h - 1 / 3;\n      for (i = _i = 0; _i <= 2; i = ++_i) {\n        if (t3[i] < 0) {\n          t3[i] += 1;\n        }\n        if (t3[i] > 1) {\n          t3[i] -= 1;\n        }\n        if (6 * t3[i] < 1) {\n          c[i] = t1 + (t2 - t1) * 6 * t3[i];\n        } else if (2 * t3[i] < 1) {\n          c[i] = t2;\n        } else if (3 * t3[i] < 2) {\n          c[i] = t1 + (t2 - t1) * ((2 / 3) - t3[i]) * 6;\n        } else {\n          c[i] = t1;\n        }\n      }\n      _ref1 = [Math.round(c[0] * 255), Math.round(c[1] * 255), Math.round(c[2] * 255)], r = _ref1[0], g = _ref1[1], b = _ref1[2];\n    }\n    return [r, g, b];\n  };\n\n  hsv2rgb = function() {\n    var b, f, g, h, i, p, q, r, s, t, v, _ref, _ref1, _ref2, _ref3, _ref4, _ref5, _ref6;\n\n    _ref = unpack(arguments), h = _ref[0], s = _ref[1], v = _ref[2];\n    v *= 255;\n    if (s === 0) {\n      r = g = b = v;\n    } else {\n      if (h === 360) {\n        h = 0;\n      }\n      if (h > 360) {\n        h -= 360;\n      }\n      if (h < 0) {\n        h += 360;\n      }\n      h /= 60;\n      i = Math.floor(h);\n      f = h - i;\n      p = v * (1 - s);\n      q = v * (1 - s * f);\n      t = v * (1 - s * (1 - f));\n      switch (i) {\n        case 0:\n          _ref1 = [v, t, p], r = _ref1[0], g = _ref1[1], b = _ref1[2];\n          break;\n        case 1:\n          _ref2 = [q, v, p], r = _ref2[0], g = _ref2[1], b = _ref2[2];\n          break;\n        case 2:\n          _ref3 = [p, v, t], r = _ref3[0], g = _ref3[1], b = _ref3[2];\n          break;\n        case 3:\n          _ref4 = [p, q, v], r = _ref4[0], g = _ref4[1], b = _ref4[2];\n          break;\n        case 4:\n          _ref5 = [t, p, v], r = _ref5[0], g = _ref5[1], b = _ref5[2];\n          break;\n        case 5:\n          _ref6 = [v, p, q], r = _ref6[0], g = _ref6[1], b = _ref6[2];\n      }\n    }\n    r = Math.round(r);\n    g = Math.round(g);\n    b = Math.round(b);\n    return [r, g, b];\n  };\n\n  K = 18;\n\n  X = 0.950470;\n\n  Y = 1;\n\n  Z = 1.088830;\n\n  lab2lch = function() {\n    var a, b, c, h, l, _ref;\n\n    _ref = unpack(arguments), l = _ref[0], a = _ref[1], b = _ref[2];\n    c = Math.sqrt(a * a + b * b);\n    h = Math.atan2(b, a) / Math.PI * 180;\n    return [l, c, h];\n  };\n\n  lab2rgb = function(l, a, b) {\n    /*\n    adapted to match d3 implementation\n    */\n\n    var g, r, x, y, z, _ref, _ref1;\n\n    if (l !== void 0 && l.length === 3) {\n      _ref = l, l = _ref[0], a = _ref[1], b = _ref[2];\n    }\n    if (l !== void 0 && l.length === 3) {\n      _ref1 = l, l = _ref1[0], a = _ref1[1], b = _ref1[2];\n    }\n    y = (l + 16) / 116;\n    x = y + a / 500;\n    z = y - b / 200;\n    x = lab_xyz(x) * X;\n    y = lab_xyz(y) * Y;\n    z = lab_xyz(z) * Z;\n    r = xyz_rgb(3.2404542 * x - 1.5371385 * y - 0.4985314 * z);\n    g = xyz_rgb(-0.9692660 * x + 1.8760108 * y + 0.0415560 * z);\n    b = xyz_rgb(0.0556434 * x - 0.2040259 * y + 1.0572252 * z);\n    return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255), 1];\n  };\n\n  lab_xyz = function(x) {\n    if (x > 0.206893034) {\n      return x * x * x;\n    } else {\n      return (x - 4 / 29) / 7.787037;\n    }\n  };\n\n  xyz_rgb = function(r) {\n    return Math.round(255 * (r <= 0.00304 ? 12.92 * r : 1.055 * Math.pow(r, 1 / 2.4) - 0.055));\n  };\n\n  lch2lab = function() {\n    /*\n    Convert from a qualitative parameter h and a quantitative parameter l to a 24-bit pixel. These formulas were invented by David Dalrymple to obtain maximum contrast without going out of gamut if the parameters are in the range 0-1.\n    A saturation multiplier was added by Gregor Aisch\n    */\n\n    var c, h, l, _ref;\n\n    _ref = unpack(arguments), l = _ref[0], c = _ref[1], h = _ref[2];\n    h = h * Math.PI / 180;\n    return [l, Math.cos(h) * c, Math.sin(h) * c];\n  };\n\n  lch2rgb = function(l, c, h) {\n    var L, a, b, g, r, _ref, _ref1;\n\n    _ref = lch2lab(l, c, h), L = _ref[0], a = _ref[1], b = _ref[2];\n    _ref1 = lab2rgb(L, a, b), r = _ref1[0], g = _ref1[1], b = _ref1[2];\n    return [limit(r, 0, 255), limit(g, 0, 255), limit(b, 0, 255)];\n  };\n\n  luminance = function(r, g, b) {\n    var _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    r = luminance_x(r);\n    g = luminance_x(g);\n    b = luminance_x(b);\n    return 0.2126 * r + 0.7152 * g + 0.0722 * b;\n  };\n\n  luminance_x = function(x) {\n    x /= 255;\n    if (x <= 0.03928) {\n      return x / 12.92;\n    } else {\n      return Math.pow((x + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  rgb2hex = function() {\n    var b, g, r, str, u, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    u = r << 16 | g << 8 | b;\n    str = \"000000\" + u.toString(16);\n    return \"#\" + str.substr(str.length - 6);\n  };\n\n  rgb2hsi = function() {\n    /*\n    borrowed from here:\n    http://hummer.stanford.edu/museinfo/doc/examples/humdrum/keyscape2/rgb2hsi.cpp\n    */\n\n    var TWOPI, b, g, h, i, min, r, s, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    TWOPI = Math.PI * 2;\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    i = (r + g + b) / 3;\n    s = 1 - min / i;\n    if (s === 0) {\n      h = 0;\n    } else {\n      h = ((r - g) + (r - b)) / 2;\n      h /= Math.sqrt((r - g) * (r - g) + (r - b) * (g - b));\n      h = Math.acos(h);\n      if (b > g) {\n        h = TWOPI - h;\n      }\n      h /= TWOPI;\n    }\n    return [h * 360, s, i];\n  };\n\n  rgb2hsl = function(r, g, b) {\n    var h, l, max, min, s, _ref;\n\n    if (r !== void 0 && r.length >= 3) {\n      _ref = r, r = _ref[0], g = _ref[1], b = _ref[2];\n    }\n    r /= 255;\n    g /= 255;\n    b /= 255;\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    l = (max + min) / 2;\n    if (max === min) {\n      s = 0;\n      h = Number.NaN;\n    } else {\n      s = l < 0.5 ? (max - min) / (max + min) : (max - min) / (2 - max - min);\n    }\n    if (r === max) {\n      h = (g - b) / (max - min);\n    } else if (g === max) {\n      h = 2 + (b - r) / (max - min);\n    } else if (b === max) {\n      h = 4 + (r - g) / (max - min);\n    }\n    h *= 60;\n    if (h < 0) {\n      h += 360;\n    }\n    return [h, s, l];\n  };\n\n  rgb2hsv = function() {\n    var b, delta, g, h, max, min, r, s, v, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    min = Math.min(r, g, b);\n    max = Math.max(r, g, b);\n    delta = max - min;\n    v = max / 255.0;\n    if (max === 0) {\n      h = Number.NaN;\n      s = 0;\n    } else {\n      s = delta / max;\n      if (r === max) {\n        h = (g - b) / delta;\n      }\n      if (g === max) {\n        h = 2 + (b - r) / delta;\n      }\n      if (b === max) {\n        h = 4 + (r - g) / delta;\n      }\n      h *= 60;\n      if (h < 0) {\n        h += 360;\n      }\n    }\n    return [h, s, v];\n  };\n\n  rgb2lab = function() {\n    var b, g, r, x, y, z, _ref;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    r = rgb_xyz(r);\n    g = rgb_xyz(g);\n    b = rgb_xyz(b);\n    x = xyz_lab((0.4124564 * r + 0.3575761 * g + 0.1804375 * b) / X);\n    y = xyz_lab((0.2126729 * r + 0.7151522 * g + 0.0721750 * b) / Y);\n    z = xyz_lab((0.0193339 * r + 0.1191920 * g + 0.9503041 * b) / Z);\n    return [116 * y - 16, 500 * (x - y), 200 * (y - z)];\n  };\n\n  rgb_xyz = function(r) {\n    if ((r /= 255) <= 0.04045) {\n      return r / 12.92;\n    } else {\n      return Math.pow((r + 0.055) / 1.055, 2.4);\n    }\n  };\n\n  xyz_lab = function(x) {\n    if (x > 0.008856) {\n      return Math.pow(x, 1 / 3);\n    } else {\n      return 7.787037 * x + 4 / 29;\n    }\n  };\n\n  rgb2lch = function() {\n    var a, b, g, l, r, _ref, _ref1;\n\n    _ref = unpack(arguments), r = _ref[0], g = _ref[1], b = _ref[2];\n    _ref1 = rgb2lab(r, g, b), l = _ref1[0], a = _ref1[1], b = _ref1[2];\n    return lab2lch(l, a, b);\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  chroma.scale = function(colors, positions) {\n    var classifyValue, f, getClass, getColor, resetCache, setColors, setDomain, tmap, _colorCache, _colors, _correctLightness, _domain, _fixed, _max, _min, _mode, _nacol, _numClasses, _out, _pos, _spread;\n\n    _mode = 'rgb';\n    _nacol = chroma('#ccc');\n    _spread = 0;\n    _fixed = false;\n    _domain = [0, 1];\n    _colors = [];\n    _out = false;\n    _pos = [];\n    _min = 0;\n    _max = 1;\n    _correctLightness = false;\n    _numClasses = 0;\n    _colorCache = {};\n    setColors = function(colors, positions) {\n      var c, col, _i, _j, _ref, _ref1, _ref2;\n\n      if (colors == null) {\n        colors = ['#ddd', '#222'];\n      }\n      if ((colors != null) && type(colors) === 'string' && (((_ref = chroma.brewer) != null ? _ref[colors] : void 0) != null)) {\n        colors = chroma.brewer[colors];\n      }\n      if (type(colors) === 'array') {\n        colors = colors.slice(0);\n        for (c = _i = 0, _ref1 = colors.length - 1; 0 <= _ref1 ? _i <= _ref1 : _i >= _ref1; c = 0 <= _ref1 ? ++_i : --_i) {\n          col = colors[c];\n          if (type(col) === \"string\") {\n            colors[c] = chroma(col);\n          }\n        }\n        if (positions != null) {\n          _pos = positions;\n        } else {\n          _pos = [];\n          for (c = _j = 0, _ref2 = colors.length - 1; 0 <= _ref2 ? _j <= _ref2 : _j >= _ref2; c = 0 <= _ref2 ? ++_j : --_j) {\n            _pos.push(c / (colors.length - 1));\n          }\n        }\n      }\n      resetCache();\n      return _colors = colors;\n    };\n    setDomain = function(domain) {\n      if (domain == null) {\n        domain = [];\n      }\n      /*\n      # use this if you want to display a limited number of data classes\n      # possible methods are \"equalinterval\", \"quantiles\", \"custom\"\n      */\n\n      _domain = domain;\n      _min = domain[0];\n      _max = domain[domain.length - 1];\n      resetCache();\n      if (domain.length === 2) {\n        return _numClasses = 0;\n      } else {\n        return _numClasses = domain.length - 1;\n      }\n    };\n    getClass = function(value) {\n      var i, n;\n\n      if (_domain != null) {\n        n = _domain.length - 1;\n        i = 0;\n        while (i < n && value >= _domain[i]) {\n          i++;\n        }\n        return i - 1;\n      }\n      return 0;\n    };\n    tmap = function(t) {\n      return t;\n    };\n    classifyValue = function(value) {\n      var i, maxc, minc, n, val;\n\n      val = value;\n      if (_domain.length > 2) {\n        n = _domain.length - 1;\n        i = getClass(value);\n        minc = _domain[0] + (_domain[1] - _domain[0]) * (0 + _spread * 0.5);\n        maxc = _domain[n - 1] + (_domain[n] - _domain[n - 1]) * (1 - _spread * 0.5);\n        val = _min + ((_domain[i] + (_domain[i + 1] - _domain[i]) * 0.5 - minc) / (maxc - minc)) * (_max - _min);\n      }\n      return val;\n    };\n    getColor = function(val, bypassMap) {\n      var c, col, f0, i, k, p, t, _i, _ref;\n\n      if (bypassMap == null) {\n        bypassMap = false;\n      }\n      if (isNaN(val)) {\n        return _nacol;\n      }\n      if (!bypassMap) {\n        if (_domain.length > 2) {\n          c = getClass(val);\n          t = c / (_numClasses - 1);\n        } else {\n          t = f0 = _min !== _max ? (val - _min) / (_max - _min) : 0;\n          t = f0 = (val - _min) / (_max - _min);\n          t = Math.min(1, Math.max(0, t));\n        }\n      } else {\n        t = val;\n      }\n      if (!bypassMap) {\n        t = tmap(t);\n      }\n      k = Math.floor(t * 10000);\n      if (_colorCache[k]) {\n        col = _colorCache[k];\n      } else {\n        if (type(_colors) === 'array') {\n          for (i = _i = 0, _ref = _pos.length - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {\n            p = _pos[i];\n            if (t <= p) {\n              col = _colors[i];\n              break;\n            }\n            if (t >= p && i === _pos.length - 1) {\n              col = _colors[i];\n              break;\n            }\n            if (t > p && t < _pos[i + 1]) {\n              t = (t - p) / (_pos[i + 1] - p);\n              col = chroma.interpolate(_colors[i], _colors[i + 1], t, _mode);\n              break;\n            }\n          }\n        } else if (type(_colors) === 'function') {\n          col = _colors(t);\n        }\n        _colorCache[k] = col;\n      }\n      return col;\n    };\n    resetCache = function() {\n      return _colorCache = {};\n    };\n    setColors(colors, positions);\n    f = function(v) {\n      var c;\n\n      c = getColor(v);\n      if (_out && c[_out]) {\n        return c[_out]();\n      } else {\n        return c;\n      }\n    };\n    f.domain = function(domain, classes, mode, key) {\n      var d;\n\n      if (mode == null) {\n        mode = 'e';\n      }\n      if (!arguments.length) {\n        return _domain;\n      }\n      if (classes != null) {\n        d = chroma.analyze(domain, key);\n        if (classes === 0) {\n          domain = [d.min, d.max];\n        } else {\n          domain = chroma.limits(d, mode, classes);\n        }\n      }\n      setDomain(domain);\n      return f;\n    };\n    f.mode = function(_m) {\n      if (!arguments.length) {\n        return _mode;\n      }\n      _mode = _m;\n      resetCache();\n      return f;\n    };\n    f.range = function(colors, _pos) {\n      setColors(colors, _pos);\n      return f;\n    };\n    f.out = function(_o) {\n      _out = _o;\n      return f;\n    };\n    f.spread = function(val) {\n      if (!arguments.length) {\n        return _spread;\n      }\n      _spread = val;\n      return f;\n    };\n    f.correctLightness = function(v) {\n      if (!arguments.length) {\n        return _correctLightness;\n      }\n      _correctLightness = v;\n      resetCache();\n      if (_correctLightness) {\n        tmap = function(t) {\n          var L0, L1, L_actual, L_diff, L_ideal, max_iter, pol, t0, t1;\n\n          L0 = getColor(0, true).lab()[0];\n          L1 = getColor(1, true).lab()[0];\n          pol = L0 > L1;\n          L_actual = getColor(t, true).lab()[0];\n          L_ideal = L0 + (L1 - L0) * t;\n          L_diff = L_actual - L_ideal;\n          t0 = 0;\n          t1 = 1;\n          max_iter = 20;\n          while (Math.abs(L_diff) > 1e-2 && max_iter-- > 0) {\n            (function() {\n              if (pol) {\n                L_diff *= -1;\n              }\n              if (L_diff < 0) {\n                t0 = t;\n                t += (t1 - t) * 0.5;\n              } else {\n                t1 = t;\n                t += (t0 - t) * 0.5;\n              }\n              L_actual = getColor(t, true).lab()[0];\n              return L_diff = L_actual - L_ideal;\n            })();\n          }\n          return t;\n        };\n      } else {\n        tmap = function(t) {\n          return t;\n        };\n      }\n      return f;\n    };\n    f.colors = function(out) {\n      var i, samples, _i, _j, _len, _ref;\n\n      if (out == null) {\n        out = 'hex';\n      }\n      colors = [];\n      samples = [];\n      if (_domain.length > 2) {\n        for (i = _i = 1, _ref = _domain.length; 1 <= _ref ? _i < _ref : _i > _ref; i = 1 <= _ref ? ++_i : --_i) {\n          samples.push((_domain[i - 1] + _domain[i]) * 0.5);\n        }\n      } else {\n        samples = _domain;\n      }\n      for (_j = 0, _len = samples.length; _j < _len; _j++) {\n        i = samples[_j];\n        colors.push(f(i)[out]());\n      }\n      return colors;\n    };\n    return f;\n  };\n\n  if ((_ref = chroma.scales) == null) {\n    chroma.scales = {};\n  }\n\n  chroma.scales.cool = function() {\n    return chroma.scale([chroma.hsl(180, 1, .9), chroma.hsl(250, .7, .4)]);\n  };\n\n  chroma.scales.hot = function() {\n    return chroma.scale(['#000', '#f00', '#ff0', '#fff'], [0, .25, .75, 1]).mode('rgb');\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  chroma.analyze = function(data, key, filter) {\n    var add, k, r, val, visit, _i, _len;\n\n    r = {\n      min: Number.MAX_VALUE,\n      max: Number.MAX_VALUE * -1,\n      sum: 0,\n      values: [],\n      count: 0\n    };\n    if (filter == null) {\n      filter = function() {\n        return true;\n      };\n    }\n    add = function(val) {\n      if ((val != null) && !isNaN(val)) {\n        r.values.push(val);\n        r.sum += val;\n        if (val < r.min) {\n          r.min = val;\n        }\n        if (val > r.max) {\n          r.max = val;\n        }\n        r.count += 1;\n      }\n    };\n    visit = function(val, k) {\n      if (filter(val, k)) {\n        if ((key != null) && type(key) === 'function') {\n          return add(key(val));\n        } else if ((key != null) && type(key) === 'string' || type(key) === 'number') {\n          return add(val[key]);\n        } else {\n          return add(val);\n        }\n      }\n    };\n    if (type(data) === 'array') {\n      for (_i = 0, _len = data.length; _i < _len; _i++) {\n        val = data[_i];\n        visit(val);\n      }\n    } else {\n      for (k in data) {\n        val = data[k];\n        visit(val, k);\n      }\n    }\n    r.domain = [r.min, r.max];\n    r.limits = function(mode, num) {\n      return chroma.limits(r, mode, num);\n    };\n    return r;\n  };\n\n  chroma.limits = function(data, mode, num) {\n    var assignments, best, centroids, cluster, clusterSizes, dist, i, j, kClusters, limits, max, max_log, min, min_log, mindist, n, nb_iters, newCentroids, p, pb, pr, repeat, sum, tmpKMeansBreaks, value, values, _i, _j, _k, _l, _m, _n, _o, _p, _q, _r, _ref1, _ref10, _ref11, _ref12, _ref13, _ref14, _ref15, _ref2, _ref3, _ref4, _ref5, _ref6, _ref7, _ref8, _ref9, _s, _t, _u, _v, _w;\n\n    if (mode == null) {\n      mode = 'equal';\n    }\n    if (num == null) {\n      num = 7;\n    }\n    if (type(data) === 'array') {\n      data = chroma.analyze(data);\n    }\n    min = data.min;\n    max = data.max;\n    sum = data.sum;\n    values = data.values.sort(function(a, b) {\n      return a - b;\n    });\n    limits = [];\n    if (mode.substr(0, 1) === 'c') {\n      limits.push(min);\n      limits.push(max);\n    }\n    if (mode.substr(0, 1) === 'e') {\n      limits.push(min);\n      for (i = _i = 1, _ref1 = num - 1; 1 <= _ref1 ? _i <= _ref1 : _i >= _ref1; i = 1 <= _ref1 ? ++_i : --_i) {\n        limits.push(min + (i / num) * (max - min));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'l') {\n      if (min <= 0) {\n        throw 'Logarithmic scales are only possible for values > 0';\n      }\n      min_log = Math.LOG10E * Math.log(min);\n      max_log = Math.LOG10E * Math.log(max);\n      limits.push(min);\n      for (i = _j = 1, _ref2 = num - 1; 1 <= _ref2 ? _j <= _ref2 : _j >= _ref2; i = 1 <= _ref2 ? ++_j : --_j) {\n        limits.push(Math.pow(10, min_log + (i / num) * (max_log - min_log)));\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'q') {\n      limits.push(min);\n      for (i = _k = 1, _ref3 = num - 1; 1 <= _ref3 ? _k <= _ref3 : _k >= _ref3; i = 1 <= _ref3 ? ++_k : --_k) {\n        p = values.length * i / num;\n        pb = Math.floor(p);\n        if (pb === p) {\n          limits.push(values[pb]);\n        } else {\n          pr = p - pb;\n          limits.push(values[pb] * pr + values[pb + 1] * (1 - pr));\n        }\n      }\n      limits.push(max);\n    } else if (mode.substr(0, 1) === 'k') {\n      /*\n      implementation based on\n      http://code.google.com/p/figue/source/browse/trunk/figue.js#336\n      simplified for 1-d input values\n      */\n\n      n = values.length;\n      assignments = new Array(n);\n      clusterSizes = new Array(num);\n      repeat = true;\n      nb_iters = 0;\n      centroids = null;\n      centroids = [];\n      centroids.push(min);\n      for (i = _l = 1, _ref4 = num - 1; 1 <= _ref4 ? _l <= _ref4 : _l >= _ref4; i = 1 <= _ref4 ? ++_l : --_l) {\n        centroids.push(min + (i / num) * (max - min));\n      }\n      centroids.push(max);\n      while (repeat) {\n        for (j = _m = 0, _ref5 = num - 1; 0 <= _ref5 ? _m <= _ref5 : _m >= _ref5; j = 0 <= _ref5 ? ++_m : --_m) {\n          clusterSizes[j] = 0;\n        }\n        for (i = _n = 0, _ref6 = n - 1; 0 <= _ref6 ? _n <= _ref6 : _n >= _ref6; i = 0 <= _ref6 ? ++_n : --_n) {\n          value = values[i];\n          mindist = Number.MAX_VALUE;\n          for (j = _o = 0, _ref7 = num - 1; 0 <= _ref7 ? _o <= _ref7 : _o >= _ref7; j = 0 <= _ref7 ? ++_o : --_o) {\n            dist = Math.abs(centroids[j] - value);\n            if (dist < mindist) {\n              mindist = dist;\n              best = j;\n            }\n          }\n          clusterSizes[best]++;\n          assignments[i] = best;\n        }\n        newCentroids = new Array(num);\n        for (j = _p = 0, _ref8 = num - 1; 0 <= _ref8 ? _p <= _ref8 : _p >= _ref8; j = 0 <= _ref8 ? ++_p : --_p) {\n          newCentroids[j] = null;\n        }\n        for (i = _q = 0, _ref9 = n - 1; 0 <= _ref9 ? _q <= _ref9 : _q >= _ref9; i = 0 <= _ref9 ? ++_q : --_q) {\n          cluster = assignments[i];\n          if (newCentroids[cluster] === null) {\n            newCentroids[cluster] = values[i];\n          } else {\n            newCentroids[cluster] += values[i];\n          }\n        }\n        for (j = _r = 0, _ref10 = num - 1; 0 <= _ref10 ? _r <= _ref10 : _r >= _ref10; j = 0 <= _ref10 ? ++_r : --_r) {\n          newCentroids[j] *= 1 / clusterSizes[j];\n        }\n        repeat = false;\n        for (j = _s = 0, _ref11 = num - 1; 0 <= _ref11 ? _s <= _ref11 : _s >= _ref11; j = 0 <= _ref11 ? ++_s : --_s) {\n          if (newCentroids[j] !== centroids[i]) {\n            repeat = true;\n            break;\n          }\n        }\n        centroids = newCentroids;\n        nb_iters++;\n        if (nb_iters > 200) {\n          repeat = false;\n        }\n      }\n      kClusters = {};\n      for (j = _t = 0, _ref12 = num - 1; 0 <= _ref12 ? _t <= _ref12 : _t >= _ref12; j = 0 <= _ref12 ? ++_t : --_t) {\n        kClusters[j] = [];\n      }\n      for (i = _u = 0, _ref13 = n - 1; 0 <= _ref13 ? _u <= _ref13 : _u >= _ref13; i = 0 <= _ref13 ? ++_u : --_u) {\n        cluster = assignments[i];\n        kClusters[cluster].push(values[i]);\n      }\n      tmpKMeansBreaks = [];\n      for (j = _v = 0, _ref14 = num - 1; 0 <= _ref14 ? _v <= _ref14 : _v >= _ref14; j = 0 <= _ref14 ? ++_v : --_v) {\n        tmpKMeansBreaks.push(kClusters[j][0]);\n        tmpKMeansBreaks.push(kClusters[j][kClusters[j].length - 1]);\n      }\n      tmpKMeansBreaks = tmpKMeansBreaks.sort(function(a, b) {\n        return a - b;\n      });\n      limits.push(tmpKMeansBreaks[0]);\n      for (i = _w = 1, _ref15 = tmpKMeansBreaks.length - 1; _w <= _ref15; i = _w += 2) {\n        if (!isNaN(tmpKMeansBreaks[i])) {\n          limits.push(tmpKMeansBreaks[i]);\n        }\n      }\n    }\n    return limits;\n  };\n\n  /**\n  \tColorBrewer colors for chroma.js\n  \n  \tCopyright (c) 2002 Cynthia Brewer, Mark Harrower, and The \n  \tPennsylvania State University.\n  \n  \tLicensed under the Apache License, Version 2.0 (the \"License\"); \n  \tyou may not use this file except in compliance with the License.\n  \tYou may obtain a copy of the License at\t\n  \thttp://www.apache.org/licenses/LICENSE-2.0\n  \n  \tUnless required by applicable law or agreed to in writing, software distributed\n  \tunder the License is distributed on an \"AS IS\" BASIS, WITHOUT WARRANTIES OR\n  \tCONDITIONS OF ANY KIND, either express or implied. See the License for the\n  \tspecific language governing permissions and limitations under the License.\n  \n      @preserve\n  */\n\n\n  chroma.brewer = brewer = {\n    OrRd: ['#fff7ec', '#fee8c8', '#fdd49e', '#fdbb84', '#fc8d59', '#ef6548', '#d7301f', '#b30000', '#7f0000'],\n    PuBu: ['#fff7fb', '#ece7f2', '#d0d1e6', '#a6bddb', '#74a9cf', '#3690c0', '#0570b0', '#045a8d', '#023858'],\n    BuPu: ['#f7fcfd', '#e0ecf4', '#bfd3e6', '#9ebcda', '#8c96c6', '#8c6bb1', '#88419d', '#810f7c', '#4d004b'],\n    Oranges: ['#fff5eb', '#fee6ce', '#fdd0a2', '#fdae6b', '#fd8d3c', '#f16913', '#d94801', '#a63603', '#7f2704'],\n    BuGn: ['#f7fcfd', '#e5f5f9', '#ccece6', '#99d8c9', '#66c2a4', '#41ae76', '#238b45', '#006d2c', '#00441b'],\n    YlOrBr: ['#ffffe5', '#fff7bc', '#fee391', '#fec44f', '#fe9929', '#ec7014', '#cc4c02', '#993404', '#662506'],\n    YlGn: ['#ffffe5', '#f7fcb9', '#d9f0a3', '#addd8e', '#78c679', '#41ab5d', '#238443', '#006837', '#004529'],\n    Reds: ['#fff5f0', '#fee0d2', '#fcbba1', '#fc9272', '#fb6a4a', '#ef3b2c', '#cb181d', '#a50f15', '#67000d'],\n    RdPu: ['#fff7f3', '#fde0dd', '#fcc5c0', '#fa9fb5', '#f768a1', '#dd3497', '#ae017e', '#7a0177', '#49006a'],\n    Greens: ['#f7fcf5', '#e5f5e0', '#c7e9c0', '#a1d99b', '#74c476', '#41ab5d', '#238b45', '#006d2c', '#00441b'],\n    YlGnBu: ['#ffffd9', '#edf8b1', '#c7e9b4', '#7fcdbb', '#41b6c4', '#1d91c0', '#225ea8', '#253494', '#081d58'],\n    Purples: ['#fcfbfd', '#efedf5', '#dadaeb', '#bcbddc', '#9e9ac8', '#807dba', '#6a51a3', '#54278f', '#3f007d'],\n    GnBu: ['#f7fcf0', '#e0f3db', '#ccebc5', '#a8ddb5', '#7bccc4', '#4eb3d3', '#2b8cbe', '#0868ac', '#084081'],\n    Greys: ['#ffffff', '#f0f0f0', '#d9d9d9', '#bdbdbd', '#969696', '#737373', '#525252', '#252525', '#000000'],\n    YlOrRd: ['#ffffcc', '#ffeda0', '#fed976', '#feb24c', '#fd8d3c', '#fc4e2a', '#e31a1c', '#bd0026', '#800026'],\n    PuRd: ['#f7f4f9', '#e7e1ef', '#d4b9da', '#c994c7', '#df65b0', '#e7298a', '#ce1256', '#980043', '#67001f'],\n    Blues: ['#f7fbff', '#deebf7', '#c6dbef', '#9ecae1', '#6baed6', '#4292c6', '#2171b5', '#08519c', '#08306b'],\n    PuBuGn: ['#fff7fb', '#ece2f0', '#d0d1e6', '#a6bddb', '#67a9cf', '#3690c0', '#02818a', '#016c59', '#014636'],\n    Spectral: ['#9e0142', '#d53e4f', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#e6f598', '#abdda4', '#66c2a5', '#3288bd', '#5e4fa2'],\n    RdYlGn: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee08b', '#ffffbf', '#d9ef8b', '#a6d96a', '#66bd63', '#1a9850', '#006837'],\n    RdBu: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#f7f7f7', '#d1e5f0', '#92c5de', '#4393c3', '#2166ac', '#053061'],\n    PiYG: ['#8e0152', '#c51b7d', '#de77ae', '#f1b6da', '#fde0ef', '#f7f7f7', '#e6f5d0', '#b8e186', '#7fbc41', '#4d9221', '#276419'],\n    PRGn: ['#40004b', '#762a83', '#9970ab', '#c2a5cf', '#e7d4e8', '#f7f7f7', '#d9f0d3', '#a6dba0', '#5aae61', '#1b7837', '#00441b'],\n    RdYlBu: ['#a50026', '#d73027', '#f46d43', '#fdae61', '#fee090', '#ffffbf', '#e0f3f8', '#abd9e9', '#74add1', '#4575b4', '#313695'],\n    BrBG: ['#543005', '#8c510a', '#bf812d', '#dfc27d', '#f6e8c3', '#f5f5f5', '#c7eae5', '#80cdc1', '#35978f', '#01665e', '#003c30'],\n    RdGy: ['#67001f', '#b2182b', '#d6604d', '#f4a582', '#fddbc7', '#ffffff', '#e0e0e0', '#bababa', '#878787', '#4d4d4d', '#1a1a1a'],\n    PuOr: ['#7f3b08', '#b35806', '#e08214', '#fdb863', '#fee0b6', '#f7f7f7', '#d8daeb', '#b2abd2', '#8073ac', '#542788', '#2d004b'],\n    Set2: ['#66c2a5', '#fc8d62', '#8da0cb', '#e78ac3', '#a6d854', '#ffd92f', '#e5c494', '#b3b3b3'],\n    Accent: ['#7fc97f', '#beaed4', '#fdc086', '#ffff99', '#386cb0', '#f0027f', '#bf5b17', '#666666'],\n    Set1: ['#e41a1c', '#377eb8', '#4daf4a', '#984ea3', '#ff7f00', '#ffff33', '#a65628', '#f781bf', '#999999'],\n    Set3: ['#8dd3c7', '#ffffb3', '#bebada', '#fb8072', '#80b1d3', '#fdb462', '#b3de69', '#fccde5', '#d9d9d9', '#bc80bd', '#ccebc5', '#ffed6f'],\n    Dark2: ['#1b9e77', '#d95f02', '#7570b3', '#e7298a', '#66a61e', '#e6ab02', '#a6761d', '#666666'],\n    Paired: ['#a6cee3', '#1f78b4', '#b2df8a', '#33a02c', '#fb9a99', '#e31a1c', '#fdbf6f', '#ff7f00', '#cab2d6', '#6a3d9a', '#ffff99', '#b15928'],\n    Pastel2: ['#b3e2cd', '#fdcdac', '#cbd5e8', '#f4cae4', '#e6f5c9', '#fff2ae', '#f1e2cc', '#cccccc'],\n    Pastel1: ['#fbb4ae', '#b3cde3', '#ccebc5', '#decbe4', '#fed9a6', '#ffffcc', '#e5d8bd', '#fddaec', '#f2f2f2']\n  };\n\n  /**\n  \tX11 color names\n  \n  \thttp://www.w3.org/TR/css3-color/#svg-color\n  */\n\n\n  chroma.colors = colors = {\n    indigo: \"#4b0082\",\n    gold: \"#ffd700\",\n    hotpink: \"#ff69b4\",\n    firebrick: \"#b22222\",\n    indianred: \"#cd5c5c\",\n    yellow: \"#ffff00\",\n    mistyrose: \"#ffe4e1\",\n    darkolivegreen: \"#556b2f\",\n    olive: \"#808000\",\n    darkseagreen: \"#8fbc8f\",\n    pink: \"#ffc0cb\",\n    tomato: \"#ff6347\",\n    lightcoral: \"#f08080\",\n    orangered: \"#ff4500\",\n    navajowhite: \"#ffdead\",\n    lime: \"#00ff00\",\n    palegreen: \"#98fb98\",\n    darkslategrey: \"#2f4f4f\",\n    greenyellow: \"#adff2f\",\n    burlywood: \"#deb887\",\n    seashell: \"#fff5ee\",\n    mediumspringgreen: \"#00fa9a\",\n    fuchsia: \"#ff00ff\",\n    papayawhip: \"#ffefd5\",\n    blanchedalmond: \"#ffebcd\",\n    chartreuse: \"#7fff00\",\n    dimgray: \"#696969\",\n    black: \"#000000\",\n    peachpuff: \"#ffdab9\",\n    springgreen: \"#00ff7f\",\n    aquamarine: \"#7fffd4\",\n    white: \"#ffffff\",\n    orange: \"#ffa500\",\n    lightsalmon: \"#ffa07a\",\n    darkslategray: \"#2f4f4f\",\n    brown: \"#a52a2a\",\n    ivory: \"#fffff0\",\n    dodgerblue: \"#1e90ff\",\n    peru: \"#cd853f\",\n    lawngreen: \"#7cfc00\",\n    chocolate: \"#d2691e\",\n    crimson: \"#dc143c\",\n    forestgreen: \"#228b22\",\n    darkgrey: \"#a9a9a9\",\n    lightseagreen: \"#20b2aa\",\n    cyan: \"#00ffff\",\n    mintcream: \"#f5fffa\",\n    silver: \"#c0c0c0\",\n    antiquewhite: \"#faebd7\",\n    mediumorchid: \"#ba55d3\",\n    skyblue: \"#87ceeb\",\n    gray: \"#808080\",\n    darkturquoise: \"#00ced1\",\n    goldenrod: \"#daa520\",\n    darkgreen: \"#006400\",\n    floralwhite: \"#fffaf0\",\n    darkviolet: \"#9400d3\",\n    darkgray: \"#a9a9a9\",\n    moccasin: \"#ffe4b5\",\n    saddlebrown: \"#8b4513\",\n    grey: \"#808080\",\n    darkslateblue: \"#483d8b\",\n    lightskyblue: \"#87cefa\",\n    lightpink: \"#ffb6c1\",\n    mediumvioletred: \"#c71585\",\n    slategrey: \"#708090\",\n    red: \"#ff0000\",\n    deeppink: \"#ff1493\",\n    limegreen: \"#32cd32\",\n    darkmagenta: \"#8b008b\",\n    palegoldenrod: \"#eee8aa\",\n    plum: \"#dda0dd\",\n    turquoise: \"#40e0d0\",\n    lightgrey: \"#d3d3d3\",\n    lightgoldenrodyellow: \"#fafad2\",\n    darkgoldenrod: \"#b8860b\",\n    lavender: \"#e6e6fa\",\n    maroon: \"#800000\",\n    yellowgreen: \"#9acd32\",\n    sandybrown: \"#f4a460\",\n    thistle: \"#d8bfd8\",\n    violet: \"#ee82ee\",\n    navy: \"#000080\",\n    magenta: \"#ff00ff\",\n    dimgrey: \"#696969\",\n    tan: \"#d2b48c\",\n    rosybrown: \"#bc8f8f\",\n    olivedrab: \"#6b8e23\",\n    blue: \"#0000ff\",\n    lightblue: \"#add8e6\",\n    ghostwhite: \"#f8f8ff\",\n    honeydew: \"#f0fff0\",\n    cornflowerblue: \"#6495ed\",\n    slateblue: \"#6a5acd\",\n    linen: \"#faf0e6\",\n    darkblue: \"#00008b\",\n    powderblue: \"#b0e0e6\",\n    seagreen: \"#2e8b57\",\n    darkkhaki: \"#bdb76b\",\n    snow: \"#fffafa\",\n    sienna: \"#a0522d\",\n    mediumblue: \"#0000cd\",\n    royalblue: \"#4169e1\",\n    lightcyan: \"#e0ffff\",\n    green: \"#008000\",\n    mediumpurple: \"#9370db\",\n    midnightblue: \"#191970\",\n    cornsilk: \"#fff8dc\",\n    paleturquoise: \"#afeeee\",\n    bisque: \"#ffe4c4\",\n    slategray: \"#708090\",\n    darkcyan: \"#008b8b\",\n    khaki: \"#f0e68c\",\n    wheat: \"#f5deb3\",\n    teal: \"#008080\",\n    darkorchid: \"#9932cc\",\n    deepskyblue: \"#00bfff\",\n    salmon: \"#fa8072\",\n    darkred: \"#8b0000\",\n    steelblue: \"#4682b4\",\n    palevioletred: \"#db7093\",\n    lightslategray: \"#778899\",\n    aliceblue: \"#f0f8ff\",\n    lightslategrey: \"#778899\",\n    lightgreen: \"#90ee90\",\n    orchid: \"#da70d6\",\n    gainsboro: \"#dcdcdc\",\n    mediumseagreen: \"#3cb371\",\n    lightgray: \"#d3d3d3\",\n    mediumturquoise: \"#48d1cc\",\n    lemonchiffon: \"#fffacd\",\n    cadetblue: \"#5f9ea0\",\n    lightyellow: \"#ffffe0\",\n    lavenderblush: \"#fff0f5\",\n    coral: \"#ff7f50\",\n    purple: \"#800080\",\n    aqua: \"#00ffff\",\n    whitesmoke: \"#f5f5f5\",\n    mediumslateblue: \"#7b68ee\",\n    darkorange: \"#ff8c00\",\n    mediumaquamarine: \"#66cdaa\",\n    darksalmon: \"#e9967a\",\n    beige: \"#f5f5dc\",\n    blueviolet: \"#8a2be2\",\n    azure: \"#f0ffff\",\n    lightsteelblue: \"#b0c4de\",\n    oldlace: \"#fdf5e6\"\n  };\n\n  /*\n      chroma.js\n  \n      Copyright (c) 2011-2013, Gregor Aisch\n      All rights reserved.\n  \n      Redistribution and use in source and binary forms, with or without\n      modification, are permitted provided that the following conditions are met:\n  \n      * Redistributions of source code must retain the above copyright notice, this\n        list of conditions and the following disclaimer.\n  \n      * Redistributions in binary form must reproduce the above copyright notice,\n        this list of conditions and the following disclaimer in the documentation\n        and/or other materials provided with the distribution.\n  \n      * The name Gregor Aisch may not be used to endorse or promote products\n        derived from this software without specific prior written permission.\n  \n      THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS \"AS IS\"\n      AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE\n      IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE\n      DISCLAIMED. IN NO EVENT SHALL GREGOR AISCH OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT,\n      INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING,\n      BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n      DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY\n      OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING\n      NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE,\n      EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n  \n      @source: https://github.com/gka/chroma.js\n  */\n\n\n  type = (function() {\n    /*\n    for browser-safe type checking+\n    ported from jQuery's $.type\n    */\n\n    var classToType, name, _i, _len, _ref1;\n\n    classToType = {};\n    _ref1 = \"Boolean Number String Function Array Date RegExp Undefined Null\".split(\" \");\n    for (_i = 0, _len = _ref1.length; _i < _len; _i++) {\n      name = _ref1[_i];\n      classToType[\"[object \" + name + \"]\"] = name.toLowerCase();\n    }\n    return function(obj) {\n      var strType;\n\n      strType = Object.prototype.toString.call(obj);\n      return classToType[strType] || \"object\";\n    };\n  })();\n\n  limit = function(x, min, max) {\n    if (min == null) {\n      min = 0;\n    }\n    if (max == null) {\n      max = 1;\n    }\n    if (x < min) {\n      x = min;\n    }\n    if (x > max) {\n      x = max;\n    }\n    return x;\n  };\n\n  unpack = function(args) {\n    if (args.length >= 3) {\n      return args;\n    } else {\n      return args[0];\n    }\n  };\n\n  TWOPI = Math.PI * 2;\n\n  PITHIRD = Math.PI / 3;\n\n  cos = Math.cos;\n\n  /*\n  interpolates between a set of colors uzing a bezier spline\n  */\n\n\n  bezier = function(colors) {\n    var I, I0, I1, c, lab0, lab1, lab2, lab3, _ref1, _ref2, _ref3;\n\n    colors = (function() {\n      var _i, _len, _results;\n\n      _results = [];\n      for (_i = 0, _len = colors.length; _i < _len; _i++) {\n        c = colors[_i];\n        _results.push(chroma(c));\n      }\n      return _results;\n    })();\n    if (colors.length === 2) {\n      _ref1 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref1[0], lab1 = _ref1[1];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push(lab0[i] + t * (lab1[i] - lab0[i]));\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 3) {\n      _ref2 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref2[0], lab1 = _ref2[1], lab2 = _ref2[2];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push((1 - t) * (1 - t) * lab0[i] + 2 * (1 - t) * t * lab1[i] + t * t * lab2[i]);\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 4) {\n      _ref3 = (function() {\n        var _i, _len, _results;\n\n        _results = [];\n        for (_i = 0, _len = colors.length; _i < _len; _i++) {\n          c = colors[_i];\n          _results.push(c.lab());\n        }\n        return _results;\n      })(), lab0 = _ref3[0], lab1 = _ref3[1], lab2 = _ref3[2], lab3 = _ref3[3];\n      I = function(t) {\n        var i, lab;\n\n        lab = (function() {\n          var _i, _results;\n\n          _results = [];\n          for (i = _i = 0; _i <= 2; i = ++_i) {\n            _results.push((1 - t) * (1 - t) * (1 - t) * lab0[i] + 3 * (1 - t) * (1 - t) * t * lab1[i] + 3 * (1 - t) * t * t * lab2[i] + t * t * t * lab3[i]);\n          }\n          return _results;\n        })();\n        return chroma.lab.apply(chroma, lab);\n      };\n    } else if (colors.length === 5) {\n      I0 = bezier(colors.slice(0, 3));\n      I1 = bezier(colors.slice(2, 5));\n      I = function(t) {\n        if (t < 0.5) {\n          return I0(t * 2);\n        } else {\n          return I1((t - 0.5) * 2);\n        }\n      };\n    }\n    return I;\n  };\n\n  chroma.interpolate.bezier = bezier;\n\n}).call(this);\n","module.exports = function(module) {\n\tif (!module.webpackPolyfill) {\n\t\tmodule.deprecate = function() {};\n\t\tmodule.paths = [];\n\t\t// module.parent = undefined by default\n\t\tif (!module.children) module.children = [];\n\t\tObject.defineProperty(module, \"loaded\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.l;\n\t\t\t}\n\t\t});\n\t\tObject.defineProperty(module, \"id\", {\n\t\t\tenumerable: true,\n\t\t\tget: function() {\n\t\t\t\treturn module.i;\n\t\t\t}\n\t\t});\n\t\tmodule.webpackPolyfill = 1;\n\t}\n\treturn module;\n};\n","/* bezier-spline.js\n *\n * computes cubic bezier coefficients to generate a smooth\n * line through specified points. couples with SVG graphics\n * for interactive processing.\n *\n * For more info see:\n * http://www.particleincell.com/2012/bezier-splines/\n *\n * Lubos Brieda, Particle In Cell Consulting LLC, 2012\n * you may freely use this algorithm in your codes however where feasible\n * please include a link/reference to the source article\n */\n/*computes control points given knots K, this is the brain of the operation*/\nexport function computeControlPoints(K) {\n  let p1 = new Array();\n  let p2 = new Array();\n  let n = K.length - 1;\n\n  /*rhs vector*/\n  let a = new Array();\n  let b = new Array();\n  let c = new Array();\n  let r = new Array();\n\n  /*left most segment*/\n  a[0] = 0;\n  b[0] = 2;\n  c[0] = 1;\n  r[0] = K[0] + 2 * K[1];\n\n  /*internal segments*/\n  for (let i = 1; i < n - 1; i++) {\n    a[i] = 1;\n    b[i] = 4;\n    c[i] = 1;\n    r[i] = 4 * K[i] + 2 * K[i + 1];\n  }\n\n  /*right segment*/\n  a[n - 1] = 2;\n  b[n - 1] = 7;\n  c[n - 1] = 0;\n  r[n - 1] = 8 * K[n - 1] + K[n];\n\n  /*solves Ax=b with the Thomas algorithm (from Wikipedia)*/\n  for (let i = 1; i < n; i++) {\n    let m = a[i] / b[i - 1];\n    b[i] = b[i] - m * c[i - 1];\n    r[i] = r[i] - m * r[i - 1];\n  }\n\n  p1[n - 1] = r[n - 1] / b[n - 1];\n  for (let i = n - 2; i >= 0; --i) p1[i] = (r[i] - c[i] * p1[i + 1]) / b[i];\n\n  /*we have p1, now compute p2*/\n  for (let i = 0; i < n - 1; i++) p2[i] = 2 * K[i + 1] - p1[i + 1];\n\n  p2[n - 1] = 0.5 * (K[n] + p1[n - 1]);\n\n  return { p1: p1, p2: p2 };\n}\n","import { computeControlPoints } from \"./bezier-spline.js\";\nimport chroma from \"chroma-js\";\n\nfunction generatePoints(width, height, segmentCount, layerCount, variance) {\n  const cell_width = width / segmentCount;\n  const cell_height = height / layerCount;\n  const moveLimit_x = cell_width * variance * 0.5;\n  const moveLimit_y = cell_height * variance;\n\n  var points = [];\n  for (let y = cell_height; y < height; y += cell_height) {\n    points.push({ x: 0, y: Math.floor(y) });\n    for (let x = cell_width; x < width; x += cell_width) {\n      let varietalY = y - moveLimit_y / 2 + Math.random() * moveLimit_y;\n      let varietalX = x - moveLimit_x / 2 + Math.random() * moveLimit_x;\n      points.push({ x: Math.floor(varietalX), y: Math.floor(varietalY) });\n    }\n    points.push({ x: Math.floor(width), y: Math.floor(y) });\n  }\n  return points;\n}\n\nfunction generate_closed_path(\n  curvePoints,\n  leftCornerPoint,\n  rightCornerPoint,\n  color\n) {\n  let xPoints = curvePoints.map(p => p.x);\n  let yPoints = curvePoints.map(p => p.y);\n  let xControlPoints = computeControlPoints(xPoints);\n  let yControlPoints = computeControlPoints(yPoints);\n\n  let path =\n    `M ${leftCornerPoint.x},${leftCornerPoint.y} ` +\n    `C ${leftCornerPoint.x},${leftCornerPoint.y} ` +\n    `${xPoints[0]},${yPoints[0]} ` +\n    `${xPoints[0]},${yPoints[0]} `;\n\n  for (let i = 0; i < xPoints.length - 1; i++) {\n    path +=\n      `C ${xControlPoints.p1[i]},${yControlPoints.p1[i]} ` +\n      `${xControlPoints.p2[i]},${yControlPoints.p2[i]} ` +\n      `${xPoints[i + 1]},${yPoints[i + 1]} `;\n  }\n\n  path +=\n    `C ${xPoints[xPoints.length - 1]},${yPoints[xPoints.length - 1]} ` +\n    `${rightCornerPoint.x},${rightCornerPoint.y} ` +\n    `${rightCornerPoint.x},${rightCornerPoint.y} Z`;\n\n  let svgPath = document.createElementNS(\"http://www.w3.org/2000/svg\", \"path\");\n  svgPath.setAttributeNS(null, \"fill\", color);\n  svgPath.setAttributeNS(null, \"stroke\", \"none\");\n  svgPath.setAttributeNS(null, \"stroke-width\", 2);\n  svgPath.setAttributeNS(null, \"d\", path);\n\n  return svgPath;\n}\n\nexport default class Wavery {\n  constructor(width, height, segmentCount, layerCount, variance) {\n    this.width = width;\n    this.height = height;\n    this.segmentCount = segmentCount;\n    this.layerCount = layerCount;\n    this.variance = variance;\n  }\n  generate() {\n    let points = generatePoints(\n      this.width,\n      this.height,\n      this.segmentCount,\n      this.layerCount,\n      this.variance\n    );\n    var svg = document.createElementNS(\"http://www.w3.org/2000/svg\", \"svg\");\n    svg.setAttribute(\"width\", this.width);\n    svg.setAttribute(\"height\", this.height);\n    svg.setAttribute(\"xmlns\", \"http://www.w3.org/2000/svg\");\n\n    let f = chroma.scale([\"yellow\", \"red\", \"navy\"]).domain([0, points.length]);\n    for (let i = 0, j = points.length; i < j; i += this.segmentCount + 1) {\n      let pointsPerLayer = points.slice(i, i + this.segmentCount + 1);\n      svg.appendChild(\n        generate_closed_path(\n          pointsPerLayer,\n          { x: 0, y: this.height },\n          { x: this.width, y: this.height },\n          f(i)\n        )\n      );\n    }\n    return svg;\n  }\n}\n"],"sourceRoot":""}